// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(UsersContext))]
    partial class UsersContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Entities.Otdel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Otdel", (string)null);
                });

            modelBuilder.Entity("Entities.Podrasdel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Podrasdel", (string)null);
                });

            modelBuilder.Entity("Entities.Visitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int?>("CodeWorker")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Fio")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FIO");

                    b.Property<int?>("GroupeId")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Pasport")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CodeWorker");

                    b.HasIndex("GroupeId");

                    b.ToTable("Visitors");
                });

            modelBuilder.Entity("Entities.Worker", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Fio")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FIO");

                    b.Property<int?>("OtdelId")
                        .HasColumnType("int");

                    b.Property<int?>("PodrasdelId")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.HasIndex("OtdelId");

                    b.HasIndex("PodrasdelId");

                    b.ToTable("Worker", (string)null);
                });

            modelBuilder.Entity("Entities.Visitor", b =>
                {
                    b.HasOne("Entities.Worker", "CodeWorkerNavigation")
                        .WithMany("Visitors")
                        .HasForeignKey("CodeWorker")
                        .HasConstraintName("FK_Visitors_Worker1");

                    b.HasOne("Entities.Group", "Groupe")
                        .WithMany("Visitors")
                        .HasForeignKey("GroupeId")
                        .HasConstraintName("FK_Visitors_Groups");

                    b.Navigation("CodeWorkerNavigation");

                    b.Navigation("Groupe");
                });

            modelBuilder.Entity("Entities.Worker", b =>
                {
                    b.HasOne("Entities.Otdel", "Otdel")
                        .WithMany("Workers")
                        .HasForeignKey("OtdelId")
                        .HasConstraintName("FK_Worker_Otdel");

                    b.HasOne("Entities.Podrasdel", "Podrasdel")
                        .WithMany("Workers")
                        .HasForeignKey("PodrasdelId")
                        .HasConstraintName("FK_Worker_Podrasdel");

                    b.Navigation("Otdel");

                    b.Navigation("Podrasdel");
                });

            modelBuilder.Entity("Entities.Group", b =>
                {
                    b.Navigation("Visitors");
                });

            modelBuilder.Entity("Entities.Otdel", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("Entities.Podrasdel", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("Entities.Worker", b =>
                {
                    b.Navigation("Visitors");
                });
#pragma warning restore 612, 618
        }
    }
}
